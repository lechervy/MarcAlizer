package fr.lip6.jdescriptors.bin;

import java.io.File;
import java.util.ArrayList;

import fr.lip6.jdescriptors.color.ColorVQDescriptorCreator;
import fr.lip6.jdescriptors.color.ColorVQFloatDescriptor;
import fr.lip6.jdescriptors.color.model.IHSColorQuantizer;
import fr.lip6.jdescriptors.detector.HoneycombDetector;
import fr.lip6.jdescriptors.io.XMLWriter;

public class CreateIHSVectors {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		if(args.length < 7)
		{
			System.out.println("usage : CreateIHSvectors <src> <dst> <I> <H> <S> <spacing> <radius>");
			return ;
		}
		
		String srcDir = args[0];
		String dstDir = args[1];
		int I = Integer.parseInt(args[2]);
		int H = Integer.parseInt(args[3]);
		int S = Integer.parseInt(args[4]);
		int s = Integer.parseInt(args[5]);
		int r = Integer.parseInt(args[6]);
		
		ColorVQDescriptorCreator c = ColorVQDescriptorCreator.getInstance();
		
		//Descriptor creator
		HoneycombDetector detector = new HoneycombDetector(s, r);
		c.setDetector(detector); 
		IHSColorQuantizer q = new IHSColorQuantizer(I, H, S);
		c.setQuantizer(q);
		c.setNormalize(false);
		
		File src = new File(srcDir);
		if(!src.exists() || !src.isDirectory())
		{
			System.out.println(srcDir+" : No such directory !");
			return;
		}
		
		String[] files = src.list();
		if(files == null)
		{
			System.out.println("No files in "+srcDir);
			return;
		}
		
		for(String f : files)
		{
		
			try
			{
				ArrayList<ColorVQFloatDescriptor> list = c.createDescriptors(srcDir+"/"+f);
				XMLWriter.writeXMLFile(dstDir+"/"+f.substring(0, f.indexOf('.')), list, true);
				System.out.println(f+" descriptor written");
			}
			catch(Exception ioe)
			{
				System.err.println("no descriptors for "+f);
				ioe.printStackTrace();
			}
		}
			

	}

}
